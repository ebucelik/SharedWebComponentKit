name: Publish Package to npm

# Trigger this workflow whenever a new release is published
on:
  push:
    branches: 'main'

# Grant write permissions to the repository contents so we can push version updates
permissions:
  contents: write

jobs:
  publish:
    runs-on: ubuntu-latest
    
    steps:
      # This makes your code available for subsequent steps like installing dependencies and running tests.
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.event.repository.default_branch }}

      # This ensures we have the right Node.js version and a proper registry URL for installs and publishing.
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'

      # This ensures a clean, reproducible installation based on package-lock.json.
      - name: Install dependencies
        run: npm ci

      - name: Set env variable
        run: echo "RELEASE_VERSION=$(npm --no-git-tag-version version patch)" >> $GITHUB_ENV

      # The release tag (e.g., v1.0.1) is extracted, and npm version sets package.json version accordingly.
      # The --no-git-tag-version flag ensures npm doesn't create its own tags.
      # This step keeps package.json's version aligned with the release tag you just created.
      - name: Update package.json with release tag
        run: |
          echo "Updating package.json version to $RELEASE_VERSION"
          
      # This ensures your repository always reflects the exact version published.
      # We use the GITHUB_TOKEN to authenticate and the granted write permissions to push changes.
      - name: Commit and push version update
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add package.json package-lock.json
          git commit -m "Update package.json to version $RELEASE_VERSION"
          git push origin ${{ github.event.repository.main }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1

      - name: Create release
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            tag: ${{ steps.package-version.outputs.current-version}}
        run: |
            gh release create "$tag" \
                --repo="$GITHUB_REPOSITORY" \
                --title="${GITHUB_REPOSITORY#*} ${tag#v}" \
                --generate-notes

      # The NODE_AUTH_TOKEN is your npm access token stored as a secret.
      # npm publish --access public makes the package available to anyone on npm.
      - name: Publish to npm
        run: 
            npm run build
            npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}